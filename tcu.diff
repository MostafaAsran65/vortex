diff --git a/hw/rtl/VX_gpu_pkg.sv b/hw/rtl/VX_gpu_pkg.sv
index 37226145..6bef8c1b 100644
--- a/hw/rtl/VX_gpu_pkg.sv
+++ b/hw/rtl/VX_gpu_pkg.sv
@@ -366,6 +366,47 @@ package VX_gpu_pkg;
         return (op >= 6 && op <= 8);
     endfunction
 
+    /////////////////////////////// Issue parameters //////////////////////////
+
+    localparam ISSUE_ISW_BITS = `CLOG2(`ISSUE_WIDTH);
+    localparam ISSUE_ISW_W = `UP(ISSUE_ISW_BITS);
+    localparam PER_ISSUE_WARPS = `NUM_WARPS / `ISSUE_WIDTH;
+    localparam ISSUE_WIS_BITS = `CLOG2(PER_ISSUE_WARPS);
+    localparam ISSUE_WIS_W = `UP(ISSUE_WIS_BITS);
+
+    function automatic logic [NW_WIDTH-1:0] wis_to_wid(
+        input logic [ISSUE_WIS_W-1:0] wis,
+        input logic [ISSUE_ISW_W-1:0] isw
+    );
+        if (ISSUE_WIS_BITS == 0) begin
+            wis_to_wid = NW_WIDTH'(isw);
+        end else if (ISSUE_ISW_BITS == 0) begin
+            wis_to_wid = NW_WIDTH'(wis);
+        end else begin
+            wis_to_wid = NW_WIDTH'({wis, isw});
+        end
+    endfunction
+
+    function automatic logic [ISSUE_ISW_W-1:0] wid_to_isw(
+        input logic [NW_WIDTH-1:0] wid
+    );
+        if (ISSUE_ISW_BITS != 0) begin
+            wid_to_isw = wid[ISSUE_ISW_W-1:0];
+        end else begin
+            wid_to_isw = 0;
+        end
+    endfunction
+
+    function automatic logic [ISSUE_WIS_W-1:0] wid_to_wis(
+        input logic [NW_WIDTH-1:0] wid
+    );
+        if (ISSUE_WIS_BITS != 0) begin
+            wid_to_wis = ISSUE_WIS_W'(wid >> ISSUE_ISW_BITS);
+        end else begin
+            wid_to_wis = 0;
+        end
+    endfunction
+
     ///////////////////////////////////////////////////////////////////////////
 
     localparam INST_TCU_WMMA = 4'h0;
@@ -782,47 +823,6 @@ package VX_gpu_pkg;
     localparam VX_MEM_DATA_WIDTH =      (`L3_LINE_SIZE * 8);
     localparam VX_MEM_TAG_WIDTH =       L3_MEM_TAG_WIDTH;
 
-    /////////////////////////////// Issue parameters //////////////////////////
-
-    localparam ISSUE_ISW_BITS = `CLOG2(`ISSUE_WIDTH);
-    localparam ISSUE_ISW_W = `UP(ISSUE_ISW_BITS);
-    localparam PER_ISSUE_WARPS = `NUM_WARPS / `ISSUE_WIDTH;
-    localparam ISSUE_WIS_BITS = `CLOG2(PER_ISSUE_WARPS);
-    localparam ISSUE_WIS_W = `UP(ISSUE_WIS_BITS);
-
-    function automatic logic [NW_WIDTH-1:0] wis_to_wid(
-        input logic [ISSUE_WIS_W-1:0] wis,
-        input logic [ISSUE_ISW_W-1:0] isw
-    );
-        if (ISSUE_WIS_BITS == 0) begin
-            wis_to_wid = NW_WIDTH'(isw);
-        end else if (ISSUE_ISW_BITS == 0) begin
-            wis_to_wid = NW_WIDTH'(wis);
-        end else begin
-            wis_to_wid = NW_WIDTH'({wis, isw});
-        end
-    endfunction
-
-    function automatic logic [ISSUE_ISW_W-1:0] wid_to_isw(
-        input logic [NW_WIDTH-1:0] wid
-    );
-        if (ISSUE_ISW_BITS != 0) begin
-            wid_to_isw = wid[ISSUE_ISW_W-1:0];
-        end else begin
-            wid_to_isw = 0;
-        end
-    endfunction
-
-    function automatic logic [ISSUE_WIS_W-1:0] wid_to_wis(
-        input logic [NW_WIDTH-1:0] wid
-    );
-        if (ISSUE_WIS_BITS != 0) begin
-            wid_to_wis = ISSUE_WIS_W'(wid >> ISSUE_ISW_BITS);
-        end else begin
-            wid_to_wis = 0;
-        end
-    endfunction
-
     ///////////////////////// Miscaellaneous functions ////////////////////////
 
     function automatic logic [SFU_WIDTH-1:0] op_to_sfu_type(
diff --git a/hw/rtl/fpu/VX_fcvt_unit.sv b/hw/rtl/fpu/VX_fcvt_unit.sv
index 5d68b893..c362b29c 100644
--- a/hw/rtl/fpu/VX_fcvt_unit.sv
+++ b/hw/rtl/fpu/VX_fcvt_unit.sv
@@ -14,10 +14,10 @@
 // Modified port of cast module from fpnew Libray
 // reference: https://github.com/pulp-platform/fpnew
 
-`ifdef FPU_DSP
-
 `include "VX_fpu_define.vh"
 
+`ifdef FPU_DSP
+
 module VX_fcvt_unit import VX_gpu_pkg::*, VX_fpu_pkg::*; #(
     parameter LATENCY   = 1,
     parameter INT_WIDTH = 32,
diff --git a/hw/rtl/fpu/VX_fncp_unit.sv b/hw/rtl/fpu/VX_fncp_unit.sv
index 2046ca66..dc1d0b63 100644
--- a/hw/rtl/fpu/VX_fncp_unit.sv
+++ b/hw/rtl/fpu/VX_fncp_unit.sv
@@ -14,10 +14,10 @@
 // Modified port of noncomp module from fpnew Libray
 // reference: https://github.com/pulp-platform/fpnew
 
-`ifdef FPU_DSP
-
 `include "VX_fpu_define.vh"
 
+`ifdef FPU_DSP
+
 module VX_fncp_unit import VX_gpu_pkg::*, VX_fpu_pkg::*; #(
     parameter LATENCY  = 1,
     parameter EXP_BITS = 8,
diff --git a/hw/rtl/fpu/VX_fp_classifier.sv b/hw/rtl/fpu/VX_fp_classifier.sv
index 2edfe728..bde0383c 100644
--- a/hw/rtl/fpu/VX_fp_classifier.sv
+++ b/hw/rtl/fpu/VX_fp_classifier.sv
@@ -11,10 +11,10 @@
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
-`ifdef FPU_DSP
-
 `include "VX_fpu_define.vh"
 
+`ifdef FPU_DSP
+
 module VX_fp_classifier import VX_fpu_pkg::*; #(
     parameter MAN_BITS = 23,
     parameter EXP_BITS = 8
diff --git a/hw/rtl/fpu/VX_fp_rounding.sv b/hw/rtl/fpu/VX_fp_rounding.sv
index e4532c8a..83148496 100644
--- a/hw/rtl/fpu/VX_fp_rounding.sv
+++ b/hw/rtl/fpu/VX_fp_rounding.sv
@@ -14,10 +14,10 @@
 // Modified port of rouding module from fpnew Libray
 // reference: https://github.com/pulp-platform/fpnew
 
-`ifdef FPU_DSP
-
 `include "VX_fpu_define.vh"
 
+`ifdef FPU_DSP
+
 module VX_fp_rounding import VX_gpu_pkg::*, VX_fpu_pkg::*; #(
     parameter DAT_WIDTH = 2 // Width of the abolute value, without sign bit
 ) (
diff --git a/hw/rtl/fpu/VX_fpu_cvt.sv b/hw/rtl/fpu/VX_fpu_cvt.sv
index ca07e0cd..cd7e8b0c 100644
--- a/hw/rtl/fpu/VX_fpu_cvt.sv
+++ b/hw/rtl/fpu/VX_fpu_cvt.sv
@@ -11,10 +11,10 @@
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
-`ifdef FPU_DSP
-
 `include "VX_fpu_define.vh"
 
+`ifdef FPU_DSP
+
 module VX_fpu_cvt import VX_gpu_pkg::*, VX_fpu_pkg::*; #(
     parameter NUM_LANES = 5,
     parameter NUM_PES   = `UP(NUM_LANES / `FCVT_PE_RATIO),
diff --git a/hw/rtl/fpu/VX_fpu_div.sv b/hw/rtl/fpu/VX_fpu_div.sv
index 82f14058..b5eb7173 100644
--- a/hw/rtl/fpu/VX_fpu_div.sv
+++ b/hw/rtl/fpu/VX_fpu_div.sv
@@ -11,10 +11,10 @@
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
-`ifdef FPU_DSP
-
 `include "VX_fpu_define.vh"
 
+`ifdef FPU_DSP
+
 module VX_fpu_div import VX_gpu_pkg::*, VX_fpu_pkg::*; #(
     parameter NUM_LANES = 1,
     parameter NUM_PES   = `UP(NUM_LANES / `FDIV_PE_RATIO),
diff --git a/hw/rtl/fpu/VX_fpu_dpi.sv b/hw/rtl/fpu/VX_fpu_dpi.sv
index a61c996c..0796e4df 100644
--- a/hw/rtl/fpu/VX_fpu_dpi.sv
+++ b/hw/rtl/fpu/VX_fpu_dpi.sv
@@ -11,10 +11,10 @@
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
-`ifdef FPU_DPI
-
 `include "VX_fpu_define.vh"
 
+`ifdef FPU_DPI
+
 module VX_fpu_dpi import VX_gpu_pkg::*, VX_fpu_pkg::*; #(
     parameter NUM_LANES = 1,
     parameter TAG_WIDTH = 1,
diff --git a/hw/rtl/fpu/VX_fpu_dsp.sv b/hw/rtl/fpu/VX_fpu_dsp.sv
index dca2ecc7..e8db12c7 100644
--- a/hw/rtl/fpu/VX_fpu_dsp.sv
+++ b/hw/rtl/fpu/VX_fpu_dsp.sv
@@ -11,10 +11,10 @@
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
-`ifdef FPU_DSP
-
 `include "VX_fpu_define.vh"
 
+`ifdef FPU_DSP
+
 module VX_fpu_dsp import VX_gpu_pkg::*, VX_fpu_pkg::*; #(
     parameter NUM_LANES = 4,
     parameter TAG_WIDTH = 4,
diff --git a/hw/rtl/fpu/VX_fpu_fma.sv b/hw/rtl/fpu/VX_fpu_fma.sv
index 2d30d41d..d1ca9efe 100644
--- a/hw/rtl/fpu/VX_fpu_fma.sv
+++ b/hw/rtl/fpu/VX_fpu_fma.sv
@@ -11,10 +11,10 @@
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
-`ifdef FPU_DSP
-
 `include "VX_fpu_define.vh"
 
+`ifdef FPU_DSP
+
 module VX_fpu_fma import VX_gpu_pkg::*, VX_fpu_pkg::*; #(
     parameter NUM_LANES = 1,
     parameter NUM_PES   = `UP(NUM_LANES / `FMA_PE_RATIO),
diff --git a/hw/rtl/fpu/VX_fpu_fpnew.sv b/hw/rtl/fpu/VX_fpu_fpnew.sv
index f98546a6..da565c4a 100644
--- a/hw/rtl/fpu/VX_fpu_fpnew.sv
+++ b/hw/rtl/fpu/VX_fpu_fpnew.sv
@@ -11,10 +11,10 @@
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
-`ifdef FPU_FPNEW
-
 `include "VX_fpu_define.vh"
 
+`ifdef FPU_FPNEW
+
 module VX_fpu_fpnew
     import VX_gpu_pkg::*;
     import VX_fpu_pkg::*;
diff --git a/hw/rtl/fpu/VX_fpu_ncp.sv b/hw/rtl/fpu/VX_fpu_ncp.sv
index 00e52fa5..fae23dbf 100644
--- a/hw/rtl/fpu/VX_fpu_ncp.sv
+++ b/hw/rtl/fpu/VX_fpu_ncp.sv
@@ -11,10 +11,10 @@
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
-`ifdef FPU_DSP
-
 `include "VX_fpu_define.vh"
 
+`ifdef FPU_DSP
+
 module VX_fpu_ncp import VX_gpu_pkg::*, VX_fpu_pkg::*; #(
     parameter NUM_LANES = 1,
     parameter NUM_PES   = `UP(NUM_LANES / `FNCP_PE_RATIO),
diff --git a/hw/rtl/fpu/VX_fpu_sqrt.sv b/hw/rtl/fpu/VX_fpu_sqrt.sv
index 41b3f3f6..631790f1 100644
--- a/hw/rtl/fpu/VX_fpu_sqrt.sv
+++ b/hw/rtl/fpu/VX_fpu_sqrt.sv
@@ -11,10 +11,10 @@
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
-`ifdef FPU_DSP
-
 `include "VX_fpu_define.vh"
 
+`ifdef FPU_DSP
+
 module VX_fpu_sqrt import VX_gpu_pkg::*, VX_fpu_pkg::*; #(
     parameter NUM_LANES = 1,
     parameter NUM_PES   = `UP(NUM_LANES /`FSQRT_PE_RATIO),
diff --git a/hw/rtl/tcu/VX_tcu_fma_dsp.sv b/hw/rtl/tcu/VX_tcu_fma_dsp.sv
index cc54f198..b4290226 100644
--- a/hw/rtl/tcu/VX_tcu_fma_dsp.sv
+++ b/hw/rtl/tcu/VX_tcu_fma_dsp.sv
@@ -27,40 +27,57 @@ module VX_tcu_fma_dsp #(
     output reg  [DATAW-1:0] y
 );
     `UNUSED_VAR(reset);
+    `UNUSED_VAR({fmt_s, fmt_d});
 
-    function automatic [DATAW-1:0] sext16;
-        input logic [15:0] in;
-      begin
-        sext16 = {{(DATAW-16){in[15]}}, in};
-      end
-    endfunction
+    localparam N = 2;
+    localparam LATENCY = `LATENCY_FMA / N;
+    localparam HDATAW = DATAW / N;
 
-    function automatic signed [DATAW-1:0] sext8;
-        input logic [7:0] in;
-      begin
-        sext8 = $signed({{(DATAW-8){in[7]}}, in});
-      end
-    endfunction
+    wire [HDATAW-1:0] a_p [0:N-1];
+    wire [HDATAW-1:0] b_p [0:N-1];
 
-    always @(posedge clk) begin
-        if (enable) begin
-            case (fmt_s)
-            3'b000: begin
-                y <= $signed(a) * $signed(b) + $signed(c);
-            end
-            3'b001: begin
-                y <= sext16(a[15:0]) + sext16(b[15:0]) +
-                     sext16(a[31:16]) + sext16(b[31:16]) + $signed(c);
-            end
-            3'b100: begin
-                y <= sext8(a[7:0]) * sext8(b[7:0]) +
-                     sext8(a[15:8]) * sext8(b[15:8]) +
-                     sext8(a[23:16]) * sext8(b[23:16]) +
-                     sext8(a[31:24]) * sext8(b[31:24]) + $signed(c);
-            end
-            default:;
-            endcase
-        end
+    for (genvar i = 0; i < N; i++) begin: g_pipe
+        VX_pipe_register #(
+            .DATAW (HDATAW),
+            .DEPTH (i * LATENCY)
+        ) a_pipe (
+            .clk      (clk),
+            .reset    (reset),
+            .enable   (enable),
+            .data_in  (a[i][HDATAW-1:0]),
+            .data_out (a_p[i])
+        );
+        VX_pipe_register #(
+            .DATAW (HDATAW),
+            .DEPTH (i * LATENCY)
+        ) b_pipe (
+            .clk      (clk),
+            .reset    (reset),
+            .enable   (enable),
+            .data_in  (a[i][HDATAW-1:0]),
+            .data_out (b_p[i])
+        );
     end
 
+    wire [DATAW-1:0] fma_out [0:N];
+
+    assign fma_out[0] = c_val;
+
+    for (genvar i = 0; i < N; i++) begin : g_fmas
+        xil_fma_fp16_f32 fma (
+            .aclk                (clk),
+            .aclken              (enable),
+            .s_axis_a_tvalid     (1'b1),
+            .s_axis_a_tdata      (a_p[i * HDATAW +: HDATAW]),
+            .s_axis_b_tvalid     (1'b1),
+            .s_axis_b_tdata      (b_p[i * HDATAW +: HDATAW]),
+            .s_axis_c_tvalid     (1'b1),
+            .s_axis_c_tdata      (fma_out[i]),
+            `UNUSED_PIN (m_axis_result_tvalid),
+            .m_axis_result_tdata (fma_out[i+1])
+        );
+    end
+
+    assign d_val = DATAW'(fma_out[N]);
+
 endmodule
diff --git a/hw/scripts/xilinx_ip_gen.tcl b/hw/scripts/xilinx_ip_gen.tcl
index a1048fc7..270b22a1 100644
--- a/hw/scripts/xilinx_ip_gen.tcl
+++ b/hw/scripts/xilinx_ip_gen.tcl
@@ -32,13 +32,19 @@ if { $::argc == 2 } {
 file mkdir ${ip_dir}
 
 create_ip -name floating_point -vendor xilinx.com -library ip -version 7.1 -module_name xil_fdiv -dir ${ip_dir}
-set_property -dict [list CONFIG.Component_Name {xil_fdiv} CONFIG.Operation_Type {Divide} CONFIG.Flow_Control {NonBlocking} CONFIG.Has_ACLKEN {true} CONFIG.C_Has_UNDERFLOW {true} CONFIG.C_Has_OVERFLOW {true} CONFIG.C_Has_INVALID_OP {true} CONFIG.C_Has_DIVIDE_BY_ZERO {true} CONFIG.A_Precision_Type {Single} CONFIG.C_A_Exponent_Width {8} CONFIG.C_A_Fraction_Width {24} CONFIG.Result_Precision_Type {Single} CONFIG.C_Result_Exponent_Width {8} CONFIG.C_Result_Fraction_Width {24} CONFIG.C_Mult_Usage {No_Usage} CONFIG.Has_RESULT_TREADY {false} CONFIG.C_Latency {28} CONFIG.C_Rate {1}] [get_ips xil_fdiv]
+set_property -dict [list CONFIG.Operation_Type {Divide} CONFIG.A_Precision_Type {Single} CONFIG.C_A_Exponent_Width {8} CONFIG.C_A_Fraction_Width {24} CONFIG.Result_Precision_Type {Single} CONFIG.C_Mult_Usage {No_Usage} CONFIG.Has_RESULT_TREADY {false} CONFIG.C_Rate {1} CONFIG.Flow_Control {NonBlocking} CONFIG.Has_ACLKEN {true} CONFIG.C_Has_UNDERFLOW {true} CONFIG.C_Has_OVERFLOW {true} CONFIG.C_Has_INVALID_OP {true} CONFIG.C_Has_DIVIDE_BY_ZERO {true}] [get_ips xil_fdiv]
 
 create_ip -name floating_point -vendor xilinx.com -library ip -version 7.1 -module_name xil_fsqrt -dir ${ip_dir}
-set_property -dict [list CONFIG.Component_Name {xil_fsqrt} CONFIG.Operation_Type {Square_root} CONFIG.Flow_Control {NonBlocking} CONFIG.Has_ACLKEN {true} CONFIG.C_Has_INVALID_OP {true} CONFIG.A_Precision_Type {Single} CONFIG.C_A_Exponent_Width {8} CONFIG.C_A_Fraction_Width {24} CONFIG.Result_Precision_Type {Single} CONFIG.C_Result_Exponent_Width {8} CONFIG.C_Result_Fraction_Width {24} CONFIG.C_Mult_Usage {No_Usage} CONFIG.Has_RESULT_TREADY {false} CONFIG.C_Latency {28} CONFIG.C_Rate {1}] [get_ips xil_fsqrt]
+set_property -dict [list CONFIG.Operation_Type {Square_root} CONFIG.A_Precision_Type {Single} CONFIG.C_A_Exponent_Width {8} CONFIG.C_A_Fraction_Width {24} CONFIG.Result_Precision_Type {Single} CONFIG.C_Mult_Usage {No_Usage} CONFIG.Has_RESULT_TREADY {false} CONFIG.C_Rate {1} CONFIG.Flow_Control {NonBlocking} CONFIG.Has_ACLKEN {true} CONFIG.C_Has_INVALID_OP {true}] [get_ips xil_fsqrt]
 
 create_ip -name floating_point -vendor xilinx.com -library ip -version 7.1 -module_name xil_fma -dir ${ip_dir}
-set_property -dict [list CONFIG.Component_Name {xil_fma} CONFIG.Operation_Type {FMA} CONFIG.Add_Sub_Value {Add} CONFIG.Flow_Control {NonBlocking} CONFIG.Has_ACLKEN {true} CONFIG.C_Has_UNDERFLOW {true} CONFIG.C_Has_OVERFLOW {true} CONFIG.C_Has_INVALID_OP {true} CONFIG.Has_A_TUSER {false} CONFIG.A_Precision_Type {Single} CONFIG.C_A_Exponent_Width {8} CONFIG.C_A_Fraction_Width {24} CONFIG.Result_Precision_Type {Single} CONFIG.C_Result_Exponent_Width {8} CONFIG.C_Result_Fraction_Width {24} CONFIG.C_Mult_Usage {Medium_Usage} CONFIG.Has_RESULT_TREADY {false} CONFIG.C_Latency {16} CONFIG.C_Rate {1} CONFIG.A_TUSER_Width {1}] [get_ips xil_fma]
+set_property -dict [list CONFIG.Operation_Type {FMA} CONFIG.Add_Sub_Value {Add} CONFIG.A_Precision_Type {Single} CONFIG.Result_Precision_Type {Single} CONFIG.Has_RESULT_TREADY {false} CONFIG.C_Rate {1} CONFIG.Flow_Control {NonBlocking} CONFIG.Has_ACLKEN {true} CONFIG.C_Has_UNDERFLOW {true} CONFIG.C_Has_OVERFLOW {true} CONFIG.C_Has_INVALID_OP {true} CONFIG.C_Mult_Usage {Full_Usage}] [get_ips xil_fma]
+
+create_ip -name floating_point -vendor xilinx.com -library ip -version 7.1 -module_name xil_fma_fp16_fp32 -dir ${ip_dir}
+set_property -dict [list CONFIG.Operation_Type {FMA} CONFIG.Add_Sub_Value {Add} CONFIG.A_Precision_Type {Half} CONFIG.C_A_Exponent_Width {5} CONFIG.C_A_Fraction_Width {10} CONFIG.Result_Precision_Type {Single} CONFIG.Has_RESULT_TREADY {false} CONFIG.Flow_Control {NonBlocking} CONFIG.Has_ACLKEN {true} CONFIG.C_Rate {1} CONFIG.C_Mult_Usage {Full_Usage}] [get_ips xil_fma_fp16_fp32]
+
+#create_ip -name floating_point -vendor xilinx.com -library ip -version 7.1 -module_name xil_fma_bp16_fp32 -dir ${ip_dir}
+#set_property -dict [list CONFIG.Operation_Type {FMA} CONFIG.Add_Sub_Value {Add} CONFIG.A_Precision_Type {Half} CONFIG.C_A_Exponent_Width {8} CONFIG.C_A_Fraction_Width {7} CONFIG.Result_Precision_Type {Single} CONFIG.Has_RESULT_TREADY {false} CONFIG.Flow_Control {NonBlocking} CONFIG.Has_ACLKEN {true} CONFIG.C_Rate {1} CONFIG.C_Mult_Usage {Full_Usage}] [get_ips xil_fma_bp16_fp32]
 
 generate_target all [get_ips]
 
diff --git a/third_party/ramulator b/third_party/ramulator
--- a/third_party/ramulator
+++ b/third_party/ramulator
@@ -1 +1 @@
-Subproject commit e62c84a6f0e06566ba6e182d308434b4532068a5
+Subproject commit e62c84a6f0e06566ba6e182d308434b4532068a5-dirty
